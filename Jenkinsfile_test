@Library('piper-library-os') _
pipeline {
    // Execute the Pipeline, or stage, on any available agent.
    agent any
    //allows configuring Pipeline-specific options from within the Pipeline itself
    options {
        // Prepend all console output generated by the Pipeline run with the time at which the line was emitted.
        timestamps()
    }
    triggers {
        // Trigger pipeline hourly
        cron('0 * * * *')
    }
    stages {
        // Initializes the commonPipelineEnvironment, which is used throughout the complete pipeline.
        stage('Initial Setup'){
            steps {
                setupCommonPipelineEnvironment script: this
            }
        }

        // Create a communication arrangement SAP_COM_0510 using service key
        stage('Configure Communication Arrangement SAP_COM_0510') {
            steps {
                cloudFoundryCreateServiceKey(
                    script : this,
                    cfServiceKeyName: 'JENKINS_SAP_COM_0510',
                    cfServiceKeyConfig: '{ \"scenario_id\": \"SAP_COM_0510\", \"type\": \"basic\" }',
                )
            }
        }

         // Pull git repository for a Software component
        stage('Pull latest commit to test system') {
            steps {
                abapEnvironmentPullGitRepo(
                    script: this,
                    repositoryNames: ['/ITAPC1/I_CURRENCY'],
                    abapCredentialsId: 'abapCredentialsId',
                    host: 'd6d93105-6c7a-46b2-8ba3-d0debc384c6a.abap.eu10.hana.ondemand.com'
                    cfServiceKey: 'SAP_COM_0510'
                )
            }
        }
        
        stage('Trigger an ATC Check Run') {
            steps {
                abapEnvironmentRunATCCheck(
                    atcConfig: 'atcconfig.yml',
                    cfServiceKeyName: 'SAP_COM_0510',
                    script: this
                )
                recordIssues(
                    trendChartType: 'TOOLS_AGGREGATION',
                    tools: [checkStyle(pattern: 'ATCResults.xml')],
                    qualityGates: [[threshold: 1, type: 'TOTAL', unstable: true]]
                )
            }
        }
    }
}
